1.除了函数指针和指向类成员的指针，指向其他任意类型的指针都能赋给void*类型变量
  使用static_cast将void* 类型指针转换为特定类型（C语言中直接强制类型转换即可，C++中非法）

2.字符串字面值常量的类型是“若干const字符组成的数组”， "hello"的类型是 const char[6]
  把字符串字面值常量赋给char*会warning或error(C语言和C++11之前允许)，应该放在字符数组中char p[]="hello";

3.字符串字面值常量是静态分配的，做为函数返回值不会出问题（函数返回后，字面值所在内存区域不会释放）

4.空字符串记为 ""  ,类型是 const char[1], 包含一个字符 '\0'

5.引用与指针的区别在于：访问引用与访问对象在语法形式上是一致的，引用始终绑定同一个对象，不存在空引用（存在空指针）

6.const 左值引用保护数据不被修改，右值引用实现破坏性读取（一般不使用const右值引用）

7.move(x)等价于 static_cast<X&&>(x)

8.引用合并（左值引用优先）：int& &&  ;  int& &  的类型为int&，  int&& &&的类型为 int&&,  不允许出现int&& &的形式