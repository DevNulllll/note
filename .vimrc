"vimscript file settings ------ {{{
augroup filetype_vim
    autocmd!
    autocmd FileType vim setlocal foldmethod=marker
augroup END
"}}}

filetype plugin indent on
colorscheme  one

"use :Bd to close buffre but not window
command Bd :bp | :sp | :bn | :bd
let mapleader = ','
"excute zR to open all fold when opening file
autocmd BufRead * normal zR
"autocmd BufRead * :source ./*.vimrc
highlight PMenu ctermfg=232 ctermbg=45 guifg=Grey3 guibg=Turquoise2
highlight PMenuSel ctermfg=16 ctermbg=15 guifg=Grey0 guibg=White

"support true colors
if(empty($TMUX))
    if(has("termguicolors"))
        set termguicolors
    endif
endif


set timeoutlen=500
set background=light
set guioptions-=m
set guioptions-=T
set tags=./.tags;,.tags
set autoindent
set expandtab
set tabstop=4
set shiftwidth=4
set backspace=2
"set relativenumber
set number
set hlsearch
set incsearch
set noswapfile
set foldmethod=indent
"enhanced mode to explore file trees
"set wildmode=lost:longest,full
set wildmenu
"cancel complete preview,default value is menu,preiew
"set completeopt-=preview

iabbrev .. ->
inoremap jj          <Esc>la
nnoremap H 0
nnoremap L $
"set <c+h,j,k,l> to select window
noremap <c-h> <c-w><c-h>
noremap <c-j> <c-w><c-j>
noremap <c-k> <c-w><c-k>
noremap <c-l> <c-w><c-l>
"close window but not buffer
noremap <c-q> <c-w><c-q>
"cancel hlsearch
noremap <c-n><c-h> :noh<return>
"remap alt+key
inoremap k      <up>
inoremap j      <down>
inoremap h      <left>
inoremap l      <right>
inoremap w      <Esc>wa
inoremap b      <Esc>ba
"<leader>+<(,[,',",<> to wrap the word
nnoremap <leader>" viw<esc>a"<esc>bi"<esc>lel
nnoremap <leader>( viw<esc>a)<esc>bi(<esc>lel
nnoremap <leader>[ viw<esc>a]<esc>bi[<esc>lel
nnoremap <leader>< viw<esc>a><esc>bi<<esc>lel
nnoremap <leader>' viw<esc>a'<esc>bi'<esc>lel
"map to edit vimrc and source it
nnoremap <leader>ev :vsplit $MYVIMRC<cr>
nnoremap <leader>sv :source $MYVIMRC<cr>
"practice <c-c> to shift normal mode
inoremap <c-[> <nop>
nnoremap cbl :set background=light<cr>
nnoremap cbb :set background=dark<cr>
nnoremap <space> viw
onoremap p i(
onoremap q i"
nnoremap <leader>co :colorscheme one<cr>
nnoremap <leader>cm :colorscheme monokain<cr>



call plug#begin()

Plug 'scrooloose/nerdtree',{ 'on':'NERDTreeToggle' }
Plug 'easymotion/vim-easymotion'
Plug 'Valloric/YouCompleteMe'
Plug 'jiangmiao/auto-pairs'
Plug 'tpope/vim-unimpaired'
Plug 'ludovicchabant/vim-gutentags'
Plug 'skywind3000/asyncrun.vim'
Plug 'dense-analysis/ale'
Plug 'vim-airline/vim-airline'
Plug 'vim-autoformat/vim-autoformat'
Plug 'octol/vim-cpp-enhanced-highlight'
Plug 'vim-scripts/taglist.vim'
Plug 'Yggdroot/indentline'

call plug#end()


let g:plug_timeout= 300

"youcompleteme configuration ----- {{{
let g:ycm_global_ycm_extra_conf = '~/.vim/plugged/YouCompleteMe/.ycm_extra_conf.py'
let g:ycm_key_invoke_completion= '<c-z>'
let g:ycm_semantic_triggers = {'c,cpp':['re!\w{2}'],}
let g:ycm_add_preview_to_complete = 0
let g:ycm_show_diagnostics_ui = 0
let g:ycm_log_level = 'info'
let ycm_min_num_identifier_candidate_chars = 2
let g:ycm_collect_identifier_from_comments_and_strings = 1
let g:ycm_complete_in_strings = 1
set completeopt=menu,menuone
let g:ycm_server_python_interpreter = '/usr/bin/python3'
"}}}
"vim-gutentags configuration ------ {{{
let g:gutentags_project_root = ['.root','.svn','.git','.hg','.project']
let g:gutentags_ctags_tagfile = '.tags'
"put tagfiles autogenerated in ~/.cache/tags
let s:vim_tags = expand('~/.cache/tags')
let g:gutentags_cache_dir = s:vim_tags
"ctags arguments
let g:gutentags_ctags_extra_args = ['--fields=+niazS','--extra=+q']
let g:gutentags_ctags_extra_args += ['--c++-kinds=+px']
let g:gutentags_ctags_extra_args += ['--c-kinds=+px']
if !isdirectory(s:vim_tags)
    silent! call mkdir(s:vim_tags,'p')
endif
"}}}c
"asyncrun.vim configuration ------ {{{
"automatically open quickfix window,height=10
let g:asyncrun_open = 10
let g:asyncrun_bell = 1
"F10 close open quickfix window
nnoremap <F10> :call asyncrun#quickfix_toggle(10)<cr>
"F9 compile single file
nnoremap <silent> <F9> :AsyncRun g++ -Wall -O2 "$(VIM_FILEPATH)" -o "$(VIM_FILEDIR)/$(VIM_FILENOEXT)"<cr>
"F5 run single file
nnoremap <silent> <F5> :AsyncRun -raw -cwd=$(VIM_FILEDIR) "$(VIM_FILEDIR)/$(VIM_FILENOEXT)"<cr>
"F7 compile project
let g:asyncrun_rootmarks = ['.svn','.git','.root','build.xml']
nnoremap <silent> <F7> :AsyncRun -cwd=<root> make <cr>
"F8 run project ,define run in makefile
nnoremap <silent> <F8> :AsyncRun -cwd=<root> -raw make run <cr>
"F6 test,define test in makefile
nnoremap <silent> <F6> :AsyncRun -cwd=<root> -raw make test <cr>
"}}}
"ale configuration ------ {{{
let g:ale_linters = {'cpp':['gcc'],}
let g:ale_linters_explicit = 1
let g:ale_completion_delay = 500
let g:ale_echo_delay = 20
let g:ale_lint_delay = 500
let g:ale_echo_msg_format = '[%linter%] %code: %%s'
let g:ale_lint_on_text_changed = 'normal'
let g:ale_lint_on_insert_leave = 1
let g:airline#extensions#ale#enabled = 1
let g:ale_c_cc_options = '-Wall -O2 -std=c99'
let g:ale_cpp_cc_options = '-Wall -O2 -std=c++14 -I/home/wwe/leveldb'
let g:ale_c_cppcheck_options = ''
let g:ale_cpp_cppcheck_options = ''
let g:ale_sign_error = "\u2717"
let g:ale_sign_warning = "\ue009"
hi! clear SpellBad
hi! clear SpellCap
hi! clear SpellRare
hi! SpellBad gui=undercurl guisp=red
hi! SpellCap gui=undercurl guisp=blue
hi! SpellRare gui=undercurl guisp=magenta
nmap <silent> <c-k> <Plug>(ale_previous_wrap)
nmap <silent> <c-j> <Plug>(ale_next_wrap)
"}}}
"vim-autoformat configuration ------- {{{
noremap <F3> :Autoformat<cr>
"}}}
"vim-cpp-enhanced-highlight configuration ----- {{{
let g:cpp_class_scope_highlight = 1
let g:cpp_member_variable_highlight = 1
let g:cpp_class_decl_highlight = 1
let g:cpp_posix_standard = 1
let g:cpp_experimental_template_highlight = 1
let g:cpp_concepts_highlight = 1
"}}}
"vim-airline configuration ------ {{{
let g:airline_theme = 'dark'
"}}}
"vim-one configuration ------ {{{
let g:one_allow_italics = 1
"}}}
"taglist configuration ---------- {{{
augroup taglist_cmd
    autocmd!
    autocmd BufWritePost * :TlistUpdate
augroup END
let g:Tlist_Exit_OnlyWindow = 1
let g:Tlist_GainFocus_On_ToggleOpen = 1
nnoremap <silent> <leader>t :TlistToggle<cr>
"}}}
"nerdtree configuration --------- {{{
nnoremap <silent> <F2> :NERDTreeToggle<cr>
"}}}
